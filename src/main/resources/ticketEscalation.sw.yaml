specVersion: "0.8"
id: ticket-escalation
name: Ticket escalation
annotations:
  - "workflow-type/infrastructure"
version: 0.0.1
timeouts:
  workflowExecTimeout: PT24H
start: CreateJiraIssue
# dataInputSchema: ocpob-schema.json
functions:
  - name: sendEmail 
    type: custom 
    operation: service:java:com.redhat.appeng.escalation.EmailService::sendEmail
  - name: getJiraIssue
    operation: specs/jira.yaml#getIssue
  - name: createJiraIssue
    operation: specs/jira.yaml#createIssue
  - name: logInfo
    type: custom
    operation: "sysout:INFO"

states:
  - name: CreateJiraIssue
    type: operation
    actions:
      - functionRef:
          refName: createJiraIssue
          arguments:
            title: '"Request For New Namespace: " + .namespace'
        actionDataFilter:
          toStateData: .ticket
    stateDataFilter:
      output: ". += { timer: { triggered: false, startTime: now(), elapsedSeconds: 0 }}"
    transition: GetJiraIssue
  - name: GetJiraIssue
    type: operation
    actions:
      - name: "printAction"
        functionRef:
          refName: "logInfo"
          arguments:
            message: "\"GetJiraIssue is \\(.)\""
      - functionRef:
          refName: getJiraIssue
          arguments:
            id: .ticket.id
        actionDataFilter:
          toStateData: .ticket
        sleep:
          before: PT6S
    transition: GetJiraIssueResult
  - name: GetJiraIssueResult
    type: operation
    actions:
      - name: "printAction"
        functionRef:
          refName: "logInfo"
          arguments:
            message: "\"GetJiraIssueResult is \\(.)\""
    transition: TicketDone
    stateDataFilter:
      output: ". += { timer: { triggered: .timer.triggered, startTime: .timer.startTime, elapsedSeconds: now() - .timer.startTime }}"
  - name: TicketDone
    type: switch
    dataConditions:
      - condition: (.ticket.status != "Approved" and .timer.triggered == false and .timer.elapsedSeconds > 10)
        transition:
          nextState: Escalate
      - condition: (.ticket.status != "Approved")
        transition:
          nextState: GetJiraIssue
    defaultCondition:
      transition: Greetings
  - name: Escalate
    type: operation
    actions:
      - name: "printAction"
        functionRef:
          refName: "logInfo"
          arguments:
            message: "\"Escalate is \\(.)\""
      - name: "sendEmail"
        functionRef:
          refName: "sendEmail"
          arguments:
            ticketId: .ticket.id
            email: .manager
    transition: GetJiraIssue
    stateDataFilter:
      output: ". += { timer: { triggered: true, startTime: .timer.startTime, elapsedSeconds: 0 }}"
  - name: Greetings
    type: operation
    actions:
      - name: "printAction"
        functionRef:
          refName: "logInfo"
          arguments:
            message: "\"Greetings is \\(.)\""
    end: true

